import*as l from"cherry-cljs/cljs.core.js";import*as y from"react";var s=function(n){return l.truth_.call(null,l.map_QMARK_.call(null,l.second.call(null,n)))?l.array_map(l.keyword("el"),l.first.call(null,n),l.keyword("attrs"),l.second.call(null,n),l.keyword("children"),l.drop.call(null,2,n)):l.array_map(l.keyword("el"),l.first.call(null,n),l.keyword("children"),l.rest.call(null,n))},o=function(n){return l.reduce.call(null,function(t,c){const u=c,r=l.nth.call(null,u,0,null),a=l.nth.call(null,u,1,null);return l.assoc.call(null,t,l.keyword.call(null,r),a)},l.array_map(),Object.entries(n))},e=function(n){if(l.truth_.call(null,l.string_QMARK_.call(null,n)))return n;if(l.truth_.call(null,(()=>{const t=l.map_QMARK_.call(null,n);return l.truth_.call(null,t)?l.not.call(null,l.record_QMARK_.call(null,n)):t})()))return l.reduce.call(null,function(t,c){const u=c,r=l.nth.call(null,u,0,null),a=l.nth.call(null,u,1,null);return l.aset.call(null,t,l.name.call(null,r),a),t},l.js_obj.call(null),n);if(l.truth_.call(null,l.vector_QMARK_.call(null,n))){const t=s.call(null,n),c=l.__destructure_map.call(null,t),u=l.get.call(null,c,l.keyword("el")),r=l.get.call(null,c,l.keyword("attrs")),a=l.get.call(null,c,l.keyword("children")),i=l.truth_.call(null,l.keyword_QMARK_.call(null,u))?l.name.call(null,u):l.truth_.call(null,l.fn_QMARK_.call(null,u))?function(_){const h=o.call(null,_);return e.call(null,u.call(null,h))}:null,d=(()=>{const _=r;return _==null?null:e.call(null,_)})(),p=l.into_array.call(null,l.map.call(null,e,a));return y.createElement.call(null,i,d,p)}else return l.truth_.call(null,l.sequential_QMARK_.call(null,n))?l.into_array.call(null,l.map.call(null,e,n)):l.truth_.call(null,l.keyword("else"))?n:null},k=function(n){return function(t){return e.call(null,l.vector(n,t))}};export{o as __GT_clj_props,e as as_element,s as parse_element,k as reactify_component};
